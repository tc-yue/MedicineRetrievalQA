# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Question(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, key: str=None, info: str=None, userid: str=None):
        """
        Question - a model defined in Swagger

        :param key: The key of this Question.
        :type key: str
        :param info: The info of this Question.
        :type info: str
        :param userid: The userid of this Question.
        :type userid: str
        """
        self.swagger_types = {
            'key': str,
            'info': str,
            'userid': str
        }

        self.attribute_map = {
            'key': 'key',
            'info': 'info',
            'userid': 'userid'
        }

        self._key = key
        self._info = info
        self._userid = userid

    @classmethod
    def from_dict(cls, dikt) -> 'Question':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Question of this Question.
        :rtype: Question
        """
        return deserialize_model(dikt, cls)

    @property
    def key(self) -> str:
        """
        Gets the key of this Question.

        :return: The key of this Question.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key: str):
        """
        Sets the key of this Question.

        :param key: The key of this Question.
        :type key: str
        """

        self._key = key

    @property
    def info(self) -> str:
        """
        Gets the info of this Question.

        :return: The info of this Question.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info: str):
        """
        Sets the info of this Question.

        :param info: The info of this Question.
        :type info: str
        """

        self._info = info

    @property
    def userid(self) -> str:
        """
        Gets the userid of this Question.

        :return: The userid of this Question.
        :rtype: str
        """
        return self._userid

    @userid.setter
    def userid(self, userid: str):
        """
        Sets the userid of this Question.

        :param userid: The userid of this Question.
        :type userid: str
        """

        self._userid = userid

